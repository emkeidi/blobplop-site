---
import SpaceLayout from '../layouts/SpaceLayout.astro';
import SpaceCarousel from '../components/SpaceCarousel.svelte';
import AstronautLottie from '../components/AstronautLottie.astro';

const spaceImagesUrl = `https://api.nasa.gov/planetary/apod?api_key=${
  import.meta.env.NASA_API_KEY
}&count=10`;

const images = await fetch(spaceImagesUrl).then((res) => res.json());
---

<SpaceLayout>
  <main>
    <h1>Blob: <span class='text-gradient'>Star Gazers</span></h1>

    <section class='lottie'><AstronautLottie /></section>
    <section class='carousel'>
      <SpaceCarousel client:load {images} />
      <p>
        This carousel pulls 10 random images from NASA, courtesy of their <a
          href='https://api.nasa.gov/'>generous API</a
        >. This page is the result of following <a
          href='https://prismic.io/blog/astro-js-tutorial#start'>Prismic guide</a
        >.
      </p>
      <p><a href='/'>Back to homepage.</a></p>
    </section>
    <div>
      <button new-images-button>New Images</button>
    </div>
  </main>
</SpaceLayout>

<style>
  :root {
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
  }
  h1 {
    margin: 2rem 0;
  }
  main {
    margin: auto;
    padding: 1em;
    max-width: 64ch;
  }
  .text-gradient {
    font-weight: 900;
    background-image: var(--astro-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100% 200%;
    background-position-y: 100%;
    border-radius: 0.4rem;
    animation: pulse 4s ease-in-out infinite;
  }

  .lottie {
    display: flex;
    align-items: right;
    justify-content: right;
    margin-top: 15vh;
    padding: 0 0 20rem 35rem;
    position: fixed;
    z-index: -1;
  }

  .carousel {
    z-index: 100;
    position: sticky;
  }
  button {
    background: none;
    border: none;
    color: var(--color-text-secondary);
    border-radius: 0.3rem;
    transition: background-color 0.2s;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  button:hover,
  button:focus-visible {
    background-color: var(--grey-2);
  }

  .footer .container {
    z-index: 90;
    position: sticky;
  }
  @keyframes pulse {
    0%,
    100% {
      background-position-y: 0%;
    }
    50% {
      background-position-y: 80%;
    }
  }
</style>
